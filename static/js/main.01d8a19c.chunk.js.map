{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d8a19c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  \r\n    return (\r\n        <button onClick={onClick} style={{  backgroundColor: color}} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\ncolor: 'blue',\r\n  \r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n return (\r\n            <header className='header'>\r\n                <h1>{title}</h1>\r\n                <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n            </header>\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n}\r\n\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//      backgroundColor: 'black',\r\n\r\n\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ' '}`} onDoubleClick={() => \r\n            onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id) } />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n    <>\r\n    {tasks.map((task) =>  (\r\n    <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n    ))}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\nconst onSubmit = (e) => {\r\n\r\ne.preventDefault()\r\nif (!text) {\r\nalert('Please add a task')\r\nreturn\r\n\r\n}\r\nonAdd({ text, day, reminder })\r\nsetText('')\r\nsetDay('')\r\nsetReminder(false)\r\n\r\n}\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n            <label>Task</label>\r\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) =>\r\n                setText(e.target.value)} />\r\n                \r\n            </div>\r\n            <div className='form-control'>\r\n            <label>Day & Time</label>\r\n                <input type='text' placeholder='Add Time & Date' value={day} onChange={(e) => setDay\r\n                (e.target.value)}/>\r\n                \r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n            <label>Set Reminder</label>\r\n                <input type='checkbox' \r\n                checked={reminder} \r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.\r\n                currentTarget.checked)}\r\n                />\r\n               \r\n            </div>\r\n            \r\n            <input type='submit' value='Save Task' className='btn btn-block'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nconst App = () => {\n    const [showAddTask, setShowAddTask] =useState(false)\n    const [tasks, setTasks] = useState([\n        {\n        id: 1,\n        text: 'Abrams Vet Appointment',\n        day: '9/20/21 at 10:30 am',\n        reminder: true,\n        },\n        {\n            id: 2,\n            text: 'Grocery Shopping',\n            day: '9/21/21 at 11:00 am',\n            reminder: false,\n            },\n            \n            {\n                id: 3,\n                text: 'JavaScript Test',\n                day: '11/20/21 at 10:30 am',\n                reminder: true,\n                }\n\n        ])\n\n// Add Task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\nconst newTask = { id, ...task }\nsetTasks([ ...tasks, newTask ])\n}\n\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !==\n    id))\n  }\n// Toggle Reminder\n\nconst toggleReminder = (id) => {\nsetTasks(\n  tasks.map((task) => \n    task.id === id ? { ...task, reminder:\n      !task.reminder } : task\n    )\n  )\n}\n\n\n\n \n  return (\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask onAdd={addTask} />}\n    {tasks.length > 0 ? (\n    <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>\n    ) : (\n       \"No tasks to show\"\n    )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}